[1, 2, 3, 3, 4, 0, 10, 6, 5, -1, -3, 2, 3]
O(n) O(1)
def longestPeak(array):
	longestPeak = 0
	i=1 
	while i<len(array)-1:
		peak = array[i-1]<array[i] and array[i]>array[i+1]:
		if not peak:
			i+=1
			continue
		leftIdx = i -2
		while leftIdx>=0 and array[leftIdx]<array[leftIdx+1]:
			leftIdx -=1
		
		rightIdx = i+2
		while rightIdx<len(array) and array[rightIdx]<array[rightIdx-1]:
			rightIdx+=1
		
		currentPeakLefngth = rightIdx - leftIdx -1
		longestPeakLength = max(longestPeakLength,currentPeakIndx)
		i=rightIdx
	return longestPeakLength
